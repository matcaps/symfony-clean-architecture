name: Tests
on: [push, pull_request]
jobs:
  functional-tests:
    name: Functional tests
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['7.4']
        node-version: ['14.7']
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install symfony executable
        run: |
          wget https://get.symfony.com/cli/installer -O - | bash && mv /home/runner/.symfony/bin/symfony /usr/local/bin/symfony

      - name: Check symfony executable version
        run: |
            symfony --no-interaction
      - name: Install Composer dependencies
        run: |
          composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - name: Launch static code analyse
        run: ./vendor/bin/phpstan analyse

      - name: Analyze and beautify coding style
        run: php vendor/bin/phpcbf && php vendor/bin/phpcs

      - name: Launch Unit Tests
        run: ./vendor/bin/pest --coverage --min=90

